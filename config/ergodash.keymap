#include <behaviors.dtsi>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NUM     3
#define GAYMING 4

#include "mouse.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        space_main {
            bindings = <&kp SPACE>;
            key-positions = <29 30 31 32>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <42 43>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <43 44>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <44 45>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <45 46>;
        };

        f12 {
            bindings = <&kp F12>;
            key-positions = <42 44>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <46 47>;
        };

        dot {
            bindings = <&kp KP_DOT>;
            key-positions = <39 40>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <37 38>;
        };

        enter_left {
            bindings = <&kp ENTER>;
            key-positions = <38 39 40>;
        };

        enter_right {
            bindings = <&kp ENTER>;
            key-positions = <32 31 30>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <37 36>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <37 38 36>;
        };

        unserscore {
            bindings = <&kp UNDER>;
            key-positions = <50 51>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <22 23>;
        };

        volup {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <14 15>;
        };

        voldown {
            bindings = <&kp C_VOL_DN>;
            key-positions = <28 29>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <14 28>;
        };

        stop {
            bindings = <&kp C_STOP>;
            key-positions = <15 43>;
        };

        play {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <42 43>;
        };

        next {
            bindings = <&kp C_NEXT>;
            key-positions = <42 15>;
        };

        prev {
            bindings = <&kp C_PREV>;
            key-positions = <42 29>;
        };

        tab_left {
            bindings = <&kp SPACE>;
            key-positions = <32 31>;
        };

        space2 {
            bindings = <&kp SPACE>;
            key-positions = <32 30>;
        };

        function_layer1 {
            bindings = <&mo 3>;
            key-positions = <60 61>;
        };

        function_layer2 {
            bindings = <&mo 3>;
            key-positions = <65 37>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <47 30>;
        };

        lang1 {
            bindings = <&lang>;
            key-positions = <18 17>;
        };

        lang2 {
            bindings = <&lang2>;
            key-positions = <23 24>;
        };

        question_mark {
            bindings = <&question_mark>;
            key-positions = <37 38 25>;
        };

        right_alt_left {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <18 42>;
        };

        right_alt_right {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <23 55>;
        };

        up_arrow {
            bindings = <&kp UP_ARROW>;
            key-positions = <17 17 32 30>;
        };

        down_arrow {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <45 30 32>;
        };

        left_arrow {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <30 17>;
        };

        right_arrow {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <32 17>;
        };

        right_ctrl_left {
            bindings = <&kp RCTRL>;
            key-positions = <18 28>;
        };

        right_ctrl_right {
            bindings = <&kp RCTRL>;
            key-positions = <55 23>;
        };

        bang {
            bindings = <&bang_mark>;
            key-positions = <23 24 39>;
        };

        left_parenthesis {
            bindings = <&left_parenthesis>;
            key-positions = <63 37>;
        };

        right_parenthesis {
            bindings = <&right_parenthesis>;
            key-positions = <63 38>;
        };

        left_bracket {
            bindings = <&left_bracket>;
            key-positions = <63 23>;
        };

        right_bracket {
            bindings = <&right_bracket>;
            key-positions = <63 24>;
        };

        left_brace {
            bindings = <&left_brace>;
            key-positions = <63 51>;
        };

        right_brace {
            bindings = <&right_brace>;
            key-positions = <63 52>;
        };
    };

    macros {
        cons: cons {
            compatible = "zmk,behavior-macro";
            label = "cons";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp SPACE>,
                <&macro_release>,
                <&kp SPACE &kp LCTRL>;
        };

        ctrlShiftT: ctrlShiftT {
            compatible = "zmk,behavior-macro";
            label = "ctrlShiftT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT &kp T>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp T>;
        };

        ctrlShiftEsc: ctrlShiftEsc {
            compatible = "zmk,behavior-macro";
            label = "ctrlShiftEsc";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT &kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp ESC>;
        };

        lang: lang {
            compatible = "zmk,behavior-macro";
            label = "lang";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LALT &kp LEFT_SHIFT>;
        };

        question_mark: question_mark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp KP_NUMBER_6>,
                <&macro_press>,
                <&kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp KP_NUMBER_3 &kp LEFT_ALT>;

            label = "QUESTION_MARK";
        };

        lang2: lang2 {
            compatible = "zmk,behavior-macro";
            label = "LANG2";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LWIN &kp SPACE>,
                <&macro_release>,
                <&kp LEFT_WIN &kp SPACE>;
        };

        altTab: altTab {
            compatible = "zmk,behavior-macro";
            label = "ALTTAB";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp TAB>,
                <&macro_release>,
                <&kp LEFT_ALT &kp TAB>;
        };

        bang_mark: bang_mark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp KP_NUMBER_3>,
                <&macro_press>,
                <&kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp KP_NUMBER_3 &kp LEFT_ALT>;

            label = "BANG_MARK";
        };

        left_parenthesis: left_parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp KP_NUMBER_4>,
                <&macro_press>,
                <&kp KP_N1>,
                <&macro_release>,
                <&kp KP_NUMBER_1 &kp LEFT_ALT>;

            label = "LEFT_PARENTHESIS";
        };

        right_parenthesis: right_parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp KP_NUMBER_4>,
                <&macro_press>,
                <&kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp KP_NUMBER_0 &kp LEFT_ALT>;

            label = "RIGHT_PARENTHESIS";
        };

        left_bracket: left_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp KP_NUMBER_2>,
                <&macro_press>,
                <&kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp KP_NUMBER_8 &kp LEFT_ALT>;

            label = "LEFT_BRACKET";
        };

        right_bracket: right_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp KP_NUMBER_2>,
                <&macro_press>,
                <&kp KP_NUMBER_9>,
                <&macro_release>,
                <&kp KP_NUMBER_9 &kp LEFT_ALT>;

            label = "RIGHT_BRACKET";
        };

        left_brace: left_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp KP_NUMBER_6>,
                <&macro_press>,
                <&kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp KP_NUMBER_0 &kp LEFT_ALT>;

            label = "LEFT_BRACE";
        };

        right_brace: right_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp KP_NUMBER_6>,
                <&macro_press>,
                <&kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp KP_NUMBER_2 &kp LEFT_ALT>;

            label = "RIGHT_BRACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        defaut_layer {
            /* QWERTY
 * .----------------------------------------------------------------------------------------------------------------------.
 * |  `   |   1  |   2  |   3  |   4  |   5  |  [   |                    |  ]   |   6  |   7  |   8  |   9  |   0  | PScr |
 * |------+------+------+------+------+------+------+--------------------+------+------+------+------+------+------+------|
 * | ESC  |   Q  |   W  |   E  |   R  |   T  |  -   |                    |  =   |   Y  |   U  |   I  |   O  |   P  |  \   |
 * |------+------+------+------+------+------+------+--------------------+------+------+------+------+------+------+------|
 * | Tab  |   A  |   S  |   D  |   F  |   G  | Del  |                    | Bksp |   H  |   J  |   K  |   L  |   ;  |  '   |
 * |------+------+------+------+------+------+---------------------------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  | End  |                    | Home |   N  |   M  |   ,  |   .  |   /  | Shift|
 * |-------------+------+------+------+------+------+------+------+------+------+------+------+------+------+-------------|
 * | Ctrl |      | PGDN | Win  |||||||| Alt  | Space| Lower|||||||| Raise| Enter| RAlt ||||||||      | PGUP | Ins  | RCtrl|
 * .----------------------------------------------------------------------------------------------------------------------.
 */

            bindings = <
&none         &kp N1     &kp N2  &kp N3          &kp N4  &kp N5  &kp MINUS                                      &kp EQUAL      &kp N6  &kp N7  &kp N8             &kp N9   &kp N0         &kp RIGHT_BRACKET
&kp LWIN      &kp Q      &kp W   &kp E           &kp R   &kp T   &kp GRAVE                                      &kp BACKSLASH  &kp Y   &kp U   &kp I              &kp O    &kp P          &kp LEFT_BRACKET
&kp LCTRL     &kp A      &kp S   &kp D           &kp F   &kp G   &kp HOME                                       &kp END        &kp H   &kp J   &kp K              &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_ALT  &kp Z      &kp X   &kp C           &kp V   &kp B                   &none           &cons                         &kp N   &kp M   &kp COMMA          &kp DOT  &kp SLASH      &kp RSHFT
&none         &kp K_APP  &none   &kp LEFT_SHIFT  &mo 1           &lt 3 CAPSLOCK  &kp LEFT_SHIFT  &kp BACKSPACE  &kp SPACE              &mo 2   &lt 3 PRINTSCREEN  &none    &none          &none
            >;
        };

        lower_layer {
            /* .----------------------------------------------------------------------------------------------------------------------.
 * |  F11 |  F1  |  F2  |  F3  |  F4  |  F5  |      |                    |      |  F6  |  F7  |  F8  |  F9  |  F10 |  F12 |
 * |------+------+------+------+------+------+------+--------------------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+--------------------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+---------------------------+------+------+------+------+------+------+------|
 * | Shift| Boot | Reset|      |      |      |      |                    |      |      |      |      |      |      | Shift|
 * |-------------+------+------+------+------+------+------+------+------+------+------+------+------+------+-------------|
 * | Ctlr |      |      |  Win |||||||| Alt  |      | Lower|||||||| Raise|      | RAlt ||||||||      |      |      | RCtrl|
 * .----------------------------------------------------------------------------------------------------------------------.
 *//* FIXME boot and reset are not yet locale aware */
            bindings = <
&kp ESC        &kp F1            &kp F2        &kp F3        &kp F4        &kp F5  &kp F12                                  &kp F11        &kp F6      &kp F7         &kp F8                &kp F9                 &kp F10  &none
&kp LEFT_WIN   &kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &none   &ctrlShiftT                              &trans         &kp POUND   &kp EXCL       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none    &kp RIGHT_BRACKET
&kp LCTRL      &kp N5            &kp NUMBER_6  &kp N7        &kp NUMBER_8  &none   &kp PAGE_UP                              &kp PAGE_DOWN  &kp DOLLAR  &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none    &none
&kp LEFT_ALT   &kp N9            &kp N0        &kp MINUS     &kp EQUAL     &none                &none           &none                      &none       &kp SEMICOLON  &kp LEFT_BRACE        &kp RIGHT_BRACE        &none    &kp RIGHT_SHIFT
&ctrlShiftEsc  &kp LEFT_COMMAND  &trans        &kp LEFT_ALT  &mo 1                 &kp ENTER    &kp LEFT_SHIFT  &kp DELETE  &trans                     &trans         &none                 &kp RIGHT_ALT          &none    &kp RCTRL
            >;
        };

        mouse_layer {
            /* .----------------------------------------------------------------------------------------------------------------------.
 * |      | BT 0 | BT 1 | BT 2 | BT 3 |      | BTCL |                    |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+--------------------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+--------------------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+---------------------------+------+------+------+------+------+------+------|
 * | Shift|      |      |      |      |      |      |                    |      |      |      |      | Boot | Reset| Shift|
 * |-------------+------+------+------+------+------+------+------+------+------+------+------+------+------+-------------|
 * | Ctlr |      |      |  Win |||||||| Alt  |      | Lower|||||||| Raise|      | RAlt ||||||||      |      |      | RCtrl|
 * .----------------------------------------------------------------------------------------------------------------------.
 *//* FIXME boot and reset are not yet locale aware */
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4       &none  &bt BT_CLR                  &none          &none  &none           &none           &none            &none       &none
&out OUT_BLE    &ext_power EP_OFF  &mwh SCROLL_LEFT  &mwh SCROLL_UP    &mwh SCROLL_RIGHT  &none  &none                       &none          &kp A  &none           &mmv MOVE_UP    &none            &none       &none
&out OUT_USB    &ext_power EP_ON   &mkp MB2          &mwh SCROLL_DOWN  &mkp MB1           &none  &kp PAGE_UP                 &kp PAGE_DOWN  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none       &none
&kp LEFT_SHIFT  &gresc             &none             &mkp MB3          &none              &none               &none   &none                 &none  &none           &none           &bootloader      &sys_reset  &kp RIGHT_SHIFT
&trans          &none              &none             &trans            &trans                    &none        &trans  &none  &kp SPACE             &trans          &none           &none            &none       &trans
            >;
        };

        num_layer {
            bindings = <
&trans        &trans  &trans  &trans   &trans   &trans   &trans                  &trans  &trans  &trans  &kp KP_NLCK  &kp KP_DIVIDE  &kp KP_MULTIPLY  &none
&kp LEFT_WIN  &kp F1  &kp F2  &kp F3   &kp F4   &altTab  &trans                  &trans  &trans  &trans  &kp KP_N7    &kp KP_N8      &kp KP_N9        &kp KP_MINUS
&kp LCTRL     &kp F4  &kp F5  &kp F6   &kp F7   &trans   &trans                  &trans  &trans  &trans  &kp KP_N4    &kp KP_N5      &kp KP_N6        &kp KP_PLUS
&kp LEFT_ALT  &kp F8  &kp F9  &kp F11  &kp F12  &trans           &trans  &trans          &trans  &trans  &kp KP_N1    &kp KP_N2      &kp KP_N3        &kp KP_EQUAL
&trans        &trans  &trans  &trans   &trans            &trans  &trans  &trans  &trans          &trans  &none        &kp KP_N0      &kp KP_DOT       &kp KP_ENTER
            >;
        };
    };
};
